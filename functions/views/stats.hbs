<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="shortcut icon" type="image/png" href="img/cointoss.png"/>
    <link rel="stylesheet" href="style.css">
    <link rel="stylesheet" href="theme.css">
    <title>Stats</title>
</head>
<body>
    <div class="headerBar">
        <div class='dropdown menu' id='userMenu'></div>
        <h1 class="center sectionTitle">Stats</h1>
        <div class="refresh button"></div>
    </div>
    <div class="container">
        <div id="assetCategories" class="grid three box">
            <div id="portfolioCategory" class="categoryGrid">
                <div class="minorLightText miniTitle">Portfolio</div>
                <div id="portfolioTotal" class="highlight subtitle"></div>
                <div id="portfolioChange" class="highlight subtitle"></div>
            </div>
            <div id="CryptoCategory" class="categoryGrid">
                <div class="minorLightText miniTitle">Crypto</div>
                <div id="cryptoTotal" class="highlight subtitle"></div>
                <div id="cryptoChange" class="highlight subtitle"></div>
                <div id="cryptoPercent" class="minorLightText miniTitle">75% of Portfolio</div>
            </div>
            <div id="StockCategory" class="categoryGrid">
                <div class="minorLightText miniTitle">Stock</div>
                <div id="stockTotal" class="highlight subtitle"></div>
                <div id="stockChange" class="highlight subtitle"></div>
                <div id="stockPercent" class="minorLightText miniTitle">75% of Portfolio</div>
            </div>
        </div>
        <div id="winners" class="grid four box table alt">
            <div id="dollarWinners" class="col">
                <div class="minorLightText miniTitle">Winners $</div>
                <div id="dollarWinner1" class="cell">
                    <span class="symbol">ETH:</span>
                    <span class="value">$500</span>
                </div>
                <div id="dollarWinner2" class="cell">
                    <span class="symbol">ETH:</span>
                    <span class="value">$500</span>
                </div>
                <div id="dollarWinner3" class="cell">
                    <span class="symbol">ETH:</span>
                    <span class="value">$500</span>
                </div>
                <div id="dollarWinner4" class="cell">
                    <span class="symbol">ETH:</span>
                    <span class="value">$500</span>
                </div>
                <div id="dollarWinner5" class="cell">
                    <span class="symbol">ETH:</span>
                    <span class="value">$500</span>
                </div>
            </div>
            <div id="percentWinners" class="col">
                <div class="minorLightText miniTitle">Winners %</div>
                <div id="percentWinner1" class="cell">
                    <span class="symbol">ETH:</span>
                    <span class="value">$500</span>
                </div>
                <div id="percentWinner2" class="cell">
                    <span class="symbol">ETH:</span>
                    <span class="value">$500</span>
                </div>
                <div id="percentWinner3" class="cell">
                    <span class="symbol">ETH:</span>
                    <span class="value">$500</span>
                </div>
                <div id="percentWinner4" class="cell">
                    <span class="symbol">ETH:</span>
                    <span class="value">$500</span>
                </div>
                <div id="percentWinner5" class="cell">
                    <span class="symbol">ETH:</span>
                    <span class="value">$500</span>
                </div>
            </div>
            <div id="dollarLosers" class="col">
                <div class="minorLightText miniTitle">Losers $</div>
                <div id="dollarLoser1" class="cell">
                    <span class="symbol">ETH:</span>
                    <span class="value">$500</span>
                </div>
                <div id="dollarLoser2" class="cell">
                    <span class="symbol">ETH:</span>
                    <span class="value">$500</span>
                </div>
                <div id="dollarLoser3" class="cell">
                    <span class="symbol">ETH:</span>
                    <span class="value">$500</span>
                </div>
                <div id="dollarLoser4" class="cell">
                    <span class="symbol">ETH:</span>
                    <span class="value">$500</span>
                </div>
                <div id="dollarLoser5" class="cell">
                    <span class="symbol">ETH:</span>
                    <span class="value">$500</span>
                </div>
            </div>
            <div id="percentLosers" class="col">
                <div class="minorLightText miniTitle">Losers $</div>
                <div id="percentLoser1" class="cell">
                    <span class="symbol">ETH:</span>
                    <span class="value">$500</span>
                </div>
                <div id="percentLoser2" class="cell">
                    <span class="symbol">ETH:</span>
                    <span class="value">$500</span>
                </div>
                <div id="percentLoser3" class="cell">
                    <span class="symbol">ETH:</span>
                    <span class="value">$500</span>
                </div>
                <div id="percentLoser4" class="cell">
                    <span class="symbol">ETH:</span>
                    <span class="value">$500</span>
                </div>
                <div id="percentLoser5" class="cell">
                    <span class="symbol">ETH:</span>
                    <span class="value">$500</span>
                </div>
            </div>
        </div>

        <div id="change" class="grid four box table alt flush">
            <div id="changeDollarWinners" class="col">
                <div class="minorLightText miniTitle">24hr $</div>
                <div id="changeDollarWinner1" class="cell">
                    <span class="symbol">ETH:</span>
                    <span class="value">$500</span>
                </div>
                <div id="changeDollarWinner2" class="cell">
                    <span class="symbol">ETH:</span>
                    <span class="value">$500</span>
                </div>
                <div id="changeDollarWinner3" class="cell">
                    <span class="symbol">ETH:</span>
                    <span class="value">$500</span>
                </div>
                <div id="changeDollarWinner4" class="cell">
                    <span class="symbol">ETH:</span>
                    <span class="value">$500</span>
                </div>
                <div id="changeDollarWinner5" class="cell">
                    <span class="symbol">ETH:</span>
                    <span class="value">$500</span>
                </div>
            </div>
            <div id="ChangePercentWinners" class="col">
                <div class="minorLightText miniTitle">24hr %</div>
                <div id="changePercentWinner1" class="cell">
                    <span class="symbol">ETH:</span>
                    <span class="value">$500</span>
                </div>
            </div>
            <div id="changeDollarLosers" class="col">
                <div class="minorLightText miniTitle">24hr $</div>
                <div id="changeDollarLoser1" class="cell">
                    <span class="symbol">ETH:</span>
                    <span class="value">$500</span>
                </div>
            </div>
            <div id="changePercentLosers" class="col">
                <div class="minorLightText miniTitle">24hr $</div>
                <div id="changePercentLoser1" class="cell">
                    <span class="symbol">ETH:</span>
                    <span class="value">$500</span>
                </div>
            </div>
        </div>

        <div id="allocation" class="box table flush col">
            <div class="minorLightText miniTitle center">Exchange Marketshare</div>
            <div id="exchangeHolder">
            </div>
            <div id="exchangeChart">
            </div>
        </div>
        <div id="chart" class="box table flush col">
            <div class="minorLightText miniTitle center">Portfolio Value Over Time</div>
            <div id="chartHolder">
            </div>
        </div>
        {{!-- <table id="assetList">
            <thead>
                <th>Symbol</th>
                <th>Price</th>
                <th>Price Paid</th>
                <th>Quantity</th>
                <th>Cost Basis</th>
                <th>Market Value</th>
                <th>Total Growth</th>
                <th>Total Gain</th>
                <th>Today %</th>
                <th>Gain 24h</th>
            </thead>
            <tbody></tbody>
        </table> --}}
    </div>
    <nav>
        <a class="button" href="/overview">Overview</a>
        <a class="button" href="/portfolio">Portfolio</a>
        <a class="button active" href="/stats">Stats</a>
        <a class="button" href="/historical">Historical</a>
    </nav>
    <script src="js/app.js"></script>
    <script type="text/javascript">
        let initUser = (u) => {
            console.log(u)
            let costBasis, marketValue, totalGrowth, totalGain, todayPercent, todayGain;
            let row = document.querySelector('#assetList tbody');
            let assets = [];
            let i = 0;
            let holder=[3,2,3]

            {{#each asset}}
                assets[i] = {
                    symbol: `{{symbol}}`,
                    costBasis : `${parseFloat({{{quantity}}} * {{{purchasePrice}}})}`,
                    marketValue : `${({{{quantity}}} && {{{price}}}) ? parseFloat({{{quantity}}} * {{{price}}}) : 0}`,
                    todayPercent : `${parseFloat({{{priceChangePercent}}})}`,
                    todayGain : `${parseFloat({{{priceChange}}})}`,
                    type: `{{type}}`,
                    exchange: `{{exchange}}`
                }
                console.log('today percent',assets[i].todayGain);
                assets[i].totalGrowth = `${(assets[i].marketValue/assets[i].costBasis)*100}`;
                assets[i].totalGain = `${assets[i].marketValue - assets[i].costBasis}`;

                /*row.innerHTML += `<tr>
                    <td class='{{{id}}} symbol'><a>{{{symbol}}}</a><span class='edit button'></span></td>
                    <td>$${parseFloat({{price}}).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, '$1,')}</td>
                    <td>${{{purchasePrice}}}</td>
                    <td>{{{quantity}}}</td>
                    <td>$${parseFloat(assets[i].costBasis).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, '$1,')}</td>
                    <td>$${parseFloat(assets[i].marketValue).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, '$1,')}</td>
                    <td>${parseFloat(assets[i].totalGrowth).toFixed(2)-1}%</td>
                    <td>$${parseFloat(assets[i].totalGain).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, '$1,')}</td>
                    <td>${parseFloat(assets[i].todayPercent)}%</td>
                    <td>$${parseFloat(assets[i].todayGain).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, '$1,')}</td>
                </tr>`;  */  
                i++;
            {{/each}}

            let portfolioStats = {
                crypto:{
                    total: 0,
                    growth:0,
                    gains:0
                },
                stock:{
                    total: 0,
                    growth:0,
                    gains:0
                },
                total:{
                    total: 0,
                    growth:0,
                    gains:0
                },
                exchanges:{},
                topMovers: {
                    today: {
                        dollarWinners:[{'value':-2000},{'value':-2000},{'value':-2000},{'value':-2000},{'value':-2000}],
                        dollarLosers:[],
                        percentWinners:[],
                        percentLosers:[]
                    },
                    total : {
                        dollarWinners:[],
                        dollarLosers:[],
                        percentWinners:[],
                        percentLosers:[]
                    }
                }
            }
            let mapPort = assets.map(x => {
                console.log(x)
                if (x.type == 'crypto') {
                    portfolioStats.crypto.total += parseFloat(x.marketValue);
                    portfolioStats.crypto.growth += parseFloat(x.totalGrowth);
                    portfolioStats.crypto.gains += parseFloat(x.totalGain);
                }
                else if (x.type == 'stock') {
                    portfolioStats.stock.total += parseFloat(x.marketValue);
                    portfolioStats.stock.growth += parseFloat(x.totalGrowth);
                    portfolioStats.stock.gains += parseFloat(x.totalGain);
                }
                portfolioStats.total.total += parseFloat(x.marketValue);
                portfolioStats.total.growth += parseFloat(x.totalGrowth);
                portfolioStats.total.gains += parseFloat(x.totalGain);

                portfolioStats.exchanges[x.exchange] ? portfolioStats.exchanges[x.exchange] += parseFloat(x.marketValue) : portfolioStats.exchanges[x.exchange] = parseFloat(x.marketValue);

                
                x.todayGain = parseFloat(x.todayGain);
                console.log('todayGain value',x.todayGain);
                console.log('todayGain converted type',typeof x.todayGain);

                if (x.todayGain > portfolioStats.topMovers.today.dollarWinners[0].value) {
                    console.log('x todatGain is greter',x.todayGain);
                    portfolioStats.topMovers.today.dollarWinners[0] = {'symbol':x.symbol,'value':x.todayGain}
                }
                else if (x.todayGain > portfolioStats.topMovers.today.dollarWinners[1].value) {
                    console.log('checking second level comparison');
                    portfolioStats.topMovers.today.dollarWinners[1] = {'symbol':x.symbol,'value':x.todayGain}
                }
                else if (x.todayGain > portfolioStats.topMovers.today.dollarWinners[2].value) {
                    console.log('comparison3 is '+ x.todayGain +' > '+portfolioStats.topMovers.today.dollarWinners[2].value);
                    portfolioStats.topMovers.today.dollarWinners[2] = {'symbol':x.symbol,'value':x.todayGain}
                }
                else if (x.todayGain > portfolioStats.topMovers.today.dollarWinners[3].value) {
                    portfolioStats.topMovers.today.dollarWinners[3] = {'symbol':x.symbol,'value':x.todayGain}
                }
                else if (x.todayGain > portfolioStats.topMovers.today.dollarWinners[4].value) {
                    portfolioStats.topMovers.today.dollarWinners[4] = {'symbol':x.symbol,'value':x.todayGain}
                }
            })

            //portfolio calculations
            document.querySelector('#portfolioTotal').innerHTML = `$${portfolioStats.total.total.toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, '$1,')}`;
            document.querySelector('#portfolioChange').innerHTML = `<span class='textNetural'></span>$${parseFloat(portfolioStats.total.gains).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, '$1,')} <span class='textNetural'>/</span> ${parseFloat(portfolioStats.total.growth).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, '$1,')}%<span class='textNetural'></span>`;
            
            let ofPortfolio = `of portfolio`;
            //stock calculations
            document.querySelector('#stockTotal').innerHTML = `$${portfolioStats.stock.total.toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, '$1,')}`;
            document.querySelector('#stockChange').innerHTML = `<span class='textNetural'></span>$${parseFloat(portfolioStats.stock.gains).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, '$1,')} <span class='textNetural'>/</span> ${parseFloat(portfolioStats.stock.growth).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, '$1,')}%<span class='textNetural'></span>`;
            document.querySelector('#stockPercent').innerHTML = `${parseFloat((portfolioStats.stock.total/portfolioStats.total.total)*100).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, '$1,')}% ${ofPortfolio}`;

            //crypto calculations
            document.querySelector('#cryptoTotal').innerHTML = `$${portfolioStats.crypto.total.toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, '$1,')}`;
            document.querySelector('#cryptoChange').innerHTML = `<span class='textNetural'></span>$${parseFloat(portfolioStats.crypto.gains).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, '$1,')} <span class='textNetural'>/</span> ${parseFloat(portfolioStats.crypto.growth).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, '$1,')}%<span class='textNetural'></span>`;
            document.querySelector('#cryptoPercent').innerHTML = `${parseFloat((portfolioStats.crypto.total/portfolioStats.total.total)*100).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, '$1,')}% ${ofPortfolio}`


            //exchange allocation
            for (let i in portfolioStats.exchanges) {
                if (portfolioStats.exchanges[i] > 0) {
                    document.querySelector('#exchangeHolder').innerHTML += `<div class='exchangeRow grid three'><span class='exchange'>${i}</span><span class='value'>$${portfolioStats.exchanges[i].toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, '$1,')}</span><span class='value'>${((portfolioStats.exchanges[i] / portfolioStats.total.total)*100).toFixed(2)}%</span></div>`;
                }
            }

            //daily winners
            for (x in portfolioStats.topMovers) {
                console.log('processing top movers')
                for (y in portfolioStats.topMovers[x]) {
                    console.log('top movers x',portfolioStats.topMovers[x])
                    console.log('top movers y value:',y)
                    for (let i=0;i<portfolioStats.topMovers[x][y].length;i++) {
                        console.log(`top mover finalValue`, portfolioStats.topMovers[x][y][i]);
                        console.log(`#changeDollarWinner${i+1}`);
                        document.querySelector(`#changeDollarWinner${i+1}`).innerHTML = 
                        `<div id="changeDollarWinner${i+1}"><span class="symbol">${portfolioStats.topMovers[x][y][i].symbol}:</span><span class="value"> $${portfolioStats.topMovers[x][y][i].value.toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, '$1,')}</span></div>`
                    }
                }
            }
            let snapHolder = JSON.parse(`{{{snapshots}}}`);
            let chartPoints = [];
            //let snapHolder = `{{{snapshots}}}`;
            console.log('this should be a snapshot',typeof(snapHolder),snapHolder)
            console.log('snap inside spot 0',snapHolder[0]);
            for (e in snapHolder[0]) {
                //console.log('e label', snapHolder[0][e])
                //console.log('e label', snapHolder[0][e].portfolioValue)
                chartPoints.push([snapHolder[0][e].date,snapHolder[0][e].portfolioValue,snapHolder[0][e].portfolioGrowth])
            }
            console.log('chart data, yall',chartPoints);
            chartPoints.forEach(item => {
                document.querySelector('#chartHolder').innerHTML += `<div class='row'>${item}</div>`;
            })
        }                
    </script>
</body>
</html>
